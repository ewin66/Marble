@model Marbale.BusinessObject.Product

@{
    ViewBag.Title = "Product";
    Layout = null;
}
<div class="modal-header">
    <h4 class="modal-title">New Product</h4>
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="min-width: 10px !important;">&times;</button>
</div>
<div class="modal-body" style="width: 1000px">


    @using (Html.BeginForm("InsertOrUpdate", "Product", FormMethod.Post))
    {
        <div id="editpopup">
            <form>
                <div style="height: 550px;overflow-y:scroll;overflow-x: hidden;">
                <div class="form-group row">

                    <label class="col-md-2"><b>Id:</b></label>
                    @Html.TextBoxFor(m => m.Id, new { @readonly = "readonly", @class = "form-control col-md-2" })
                    <label class="col-md-1"><b>Name:</b></label>
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control col-md-3", placeholder = @Html.DisplayNameFor(n => n.Name) })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                    <label class="col-md-1">Active:</label>
                    @Html.CheckBoxFor(m => m.Active, new { @class = "form-control col-md-1" })

                    <label class="col-md-1">DisplayIn POS:</label>
                    @Html.CheckBoxFor(m => m.DisplayInPOS, new { @class = "form-control col-md-1" })
                </div>

                <div class="row">
                    <div class="form-group col-md-6">
                        <div class="form-group col-md-12">
                            <label class="col-md-6"><b>Card Face Value:</b></label>
                            @Html.TextBoxFor(m => m.FaceValue, new { @class = "form-control col-md-5" })
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6">Price:</label>
                            @Html.TextBoxFor(m => m.Price, new { @class = "form-control col-md-5" })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6">TaxInclusive:</label>
                            @Html.CheckBoxFor(m => m.TaxInclusive, new { @class = "form-control col-md-5", @onchange = "TaxDetails('', this.value)", @style = "position:absolute;width:20px;" })

                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6">Tax:</label>
                            @Html.DropDownListFor(m => m.TaxName, new SelectList((List<Marbale.BusinessObject.Tax.TaxSet>)Session["TaxList"], "Id", "Value", selectedValue: string.IsNullOrEmpty(Model.TaxName) ? "SELECT" : Model.TaxName), new { @class = "form-control col-md-5", @style = "height: 35px;font-size: 14px", @onchange = "TaxDetails(this.value)" })

                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6">Tax %:</label>
                            @Html.TextBoxFor(m => m.Taxpercent, new { @class = "form-control col-md-5" })
                        </div>

                        <div class="form-group col-md-12">
                            <label class="col-md-6">Effective Price:</label>
                            @Html.TextBoxFor(m => m.EffectivePrice, new { @class = "form-control col-md-5" })
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6">Final Price:</label>
                            @Html.TextBoxFor(m => m.FinalPrice, new { @class = "form-control col-md-5" })
                            @Html.ValidationMessageFor(model => model.FinalPrice, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6"><b>Credits:</b></label>
                            @Html.TextBoxFor(m => m.Credits, new { @class = "form-control col-md-5" })
                            @Html.ValidationMessageFor(model => model.Credits, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6">Courtesy:</label>
                            @Html.TextBoxFor(m => m.Courtesy, new { @class = "form-control col-md-5" })
                            @Html.ValidationMessageFor(model => model.Courtesy, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6">Bonus:</label>
                            @Html.TextBoxFor(m => m.Bonus, new { @class = "form-control col-md-5" })
                            @Html.ValidationMessageFor(model => model.Bonus, "", new { @class = "text-danger", @style = "color:red" })
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6">OnlyVIP:</label>
                            @Html.CheckBoxFor(m => m.OnlyVIP, new { @class = "form-control col-md-5", @style = "position:absolute;width:20px;" })
                        </div>

                        <div class="form-group col-md-12">
                            <label class="col-md-6">Category:</label>
                            @Html.DropDownListFor(m => m.Category, new SelectList((List<Marbale.BusinessObject.IdValue>)Session["CategoryList"], "Id", "Value", selectedValue: string.IsNullOrEmpty(Model.Category) ? "SELECT" : Model.Category), new { @class = "form-control col-md-5", @style = "font-size: 14px" })

                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6">Product Type:</label>

                            @Html.DropDownListFor(m => m.Type, new SelectList((List<Marbale.BusinessObject.IdValue>)Session["TypeList"], "Id", "Value", selectedValue: string.IsNullOrEmpty(Model.Type) ? "SELECT" : Model.Type), new { @class = "form-control col-md-5", @style = "height: 35px;font-size: 14px" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <div class="form-group col-md-12">
                            <label class="col-md-6">Auto Generate CardNumber:</label>

                            @Html.CheckBoxFor(m => m.AutoGenerateCardNumber, new { @class = "form-control col-md-5", @style = "position:absolute;width:20px;" })
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6">POS Counter:</label>
                            @Html.TextBoxFor(m => m.POSCounter, new { @class = "form-control col-md-5" })
                        </div>
                        <div class="form-group col-md-12">

                            <label class="col-md-6"><b>DisplayGroup:</b></label>

                            @Html.DropDownListFor(m => m.DisplayGroupId, new SelectList((List<Marbale.BusinessObject.IdValue>)Session["DisplayGroupList"], "Id", "Value"), new { @class = "form-control col-md-5", @style = "height: 35px;font-size: 14px" })

                            @* @Html.TextBoxFor(m => m.DisplayGroup, new { @class = "form-control col-md-5" })*@
                        </div>

                        <div class="form-group col-md-12">
                            <label class="col-md-6">CardValidFor:</label>
                            @Html.TextBoxFor(m => m.CardValidFor, new { @class = "form-control col-md-5" })
                        </div>

                        <div class="form-group row"></div>
                        <div class="form-group row"></div>
                        <div class="form-group row"></div>
                        <div class="form-group row"></div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6"><b>StartDate:</b></label>
                            @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control col-md-5 datepicker", @id = "StartDate", @readonly = "readonly" })
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6">ExpiryDate:</label>
                            @Html.TextBoxFor(m => m.ExpiryDate, new { @class = "form-control col-md-5" })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6">Last Updated User:</label>
                            @Html.TextBoxFor(m => m.LastUpdatedUser, new { @class = "form-control col-md-5", @readonly = "readonly" })
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-6">LastUpdatedDate:</label>
                            @Html.TextBoxFor(m => m.LastUpdatedDate, new { @class = "form-control col-md-5", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                </div>
            </form>
            <div class="modal-footer">
                <input type="submit" name="submit" value="Save" class="btn btn-primary btn-md" />
                <input type="submit" name="submit" value="Duplicate" class="btn btn-primary btn-md" />
                <button type="button" class="btn btn-secondary close1" data-dismiss="modal">Close</button>
            </div>
        </div>
  
    }
</div>

<script type="text/javascript">

    $(function () {
        $("#ExpiryDate").datepicker({
            changeMonth: true,
            changeYear: true,
            "setDate": new Date()
        });
    });

    $('.close1').click(function () {
        location.reload();

    });
    function TaxDetails(TaxId1, taxinclusive) {
        var TaxId = $('#TaxName option:selected').val();
        var Price = $('#Price').val();
        if (Price == "") {
            Price = null;
        }
        var FaceValue = Number($('#FaceValue').val());
        taxinclusive = $('#TaxInclusive').is(":checked");
        var model = {
            Id: TaxId,
            Price: Price,
            FaceValue: FaceValue,
            TaxInclusive: taxinclusive
        };
        if (TaxId == "") {
            $('#EffectivePrice').val(Price);
            $('#FinalPrice').val(Price);
        }
            //JSON.stringify({ TaxId: TaxId, Price: Price, TaxInclusive: taxinclusive, FaceValue: FaceValue }),
        else {

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("TaxDetails", "Product")',
                data: JSON.stringify({ model: model }),
                dataType: "json",
                success: function (data) {
                    $('#EffectivePrice').val(data.EffectivePrice);
                    $('#Taxpercent').val(data.Taxpercent);
                    $('#FinalPrice').val(data.FinalPrice);
                },
                error: function (e) {
                    alert(e);
                }
            });
        }
    }


</script>
<style>
    input.form-control {
        display: inline-block;
    }

    select.form-control {
        display: inline-block;
    }
    .modal-body {
        padding:5px;
    }
    .form-group {
        margin-bottom:0px;
    }
</style>
