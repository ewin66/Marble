@model Marbale.BusinessObject.Product

@{
    ViewBag.Title = "Product";
    Layout = null;
}



@using (Html.BeginForm("InsertOrUpdate", "Product", FormMethod.Post))
{
    
        <div id="editpopup">
            <form>
              <div class="form-group row">
                       
                            <label class="col-md-2"><b>Id:</b></label>
                            @Html.TextBoxFor(m => m.Id, new { @readonly = "readonly", @class = "form-control col-md-2" })
                            <label class="col-md-1"><b>Name:</b></label>
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control col-md-3", placeholder = @Html.DisplayNameFor(n => n.Name) })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
               
                            <label class="col-md-1">Active:</label>
                            @Html.CheckBoxFor(m => m.Active, new { @class = "form-control col-md-1"})

                            <label class="col-md-1">DisplayInPOS:</label>
                            @Html.CheckBoxFor(m => m.DisplayInPOS, new { @class = "form-control col-md-1" })
                    </div>
<div class="form-group row"></div>

                    <div class="form-group col-md-12">    
                            <label class="col-md-3">POS Counter:</label>
                            @Html.TextBoxFor(m => m.POSCounter, new { @class = "form-control col-md-2" })
                    </div>
         <div class="form-group col-md-12">   
                           
                            <label class="col-md-3"><b>DisplayGroup:</b></label>
                    
                            @Html.TextBoxFor(m => m.DisplayGroup, new { @class = "form-control col-md-2" })
                                  </div>
                   <div class="form-group col-md-12">     
                            <label class="col-md-3">Auto Generate CardNumber:</label>
                     
                             @Html.CheckBoxFor(m => m.AutoGenerateCardNumber, new { @class = "form-control col-md-2", @style = "position:absolute;width:20px;" })
                            </div>
                    <div class="form-group col-md-12"> 
                            <label class="col-md-3">Category:</label>
                               @Html.DropDownListFor(m => m.Category, new SelectList((List<Marbale.BusinessObject.IdValue>)Session["CategoryList"], "Id", "Value", selectedValue: string.IsNullOrEmpty(Model.Category) ? "SELECT" : Model.Category), new { @class = "form-control col-md-2" })

                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-12"> 
                            <label class="col-md-3">Product Type:</label>
                      
                            @Html.DropDownListFor(m => m.Type, new SelectList((List<Marbale.BusinessObject.IdValue>)Session["TypeList"], "Id", "Value", selectedValue: string.IsNullOrEmpty(Model.Type) ? "SELECT" : Model.Type), new { @class = "form-control col-md-2", @style = "height: 35px" })
                            

                        </div>
                        <div class="form-group col-md-12"> 
                            <label class="col-md-3">OnlyVIP:</label>
                            @Html.CheckBoxFor(m => m.OnlyVIP, new { @class = "form-control col-md-2", @style = "position:absolute;width:20px;" })
                        </div>
                        <div class="form-group col-md-12"> 
                            <label class="col-md-3"><b>Card Face Value:</b></label>
                            @Html.TextBoxFor(m => m.FaceValue, new { @class = "form-control col-md-2" })
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-3">Price:</label> 
                            @Html.TextBoxFor(m => m.Price, new { @class = "form-control col-md-2" })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-3">TaxInclusive:</label> 
                            @Html.CheckBoxFor(m => m.TaxInclusive, new { @class = "form-control col-md-2", @onchange = "TaxDetails('', this.value)", @style = "position:absolute;width:20px;" })
                                
                        </div>
                        <div class="form-group col-md-12"> 
                            <label class="col-md-3">Tax:</label>
                            @Html.DropDownListFor(m => m.TaxName, new SelectList((List<Marbale.BusinessObject.Tax.TaxSet>)Session["TaxList"], "Id", "Value", selectedValue: string.IsNullOrEmpty(Model.TaxName) ? "SELECT" : Model.TaxName), new { @class = "form-control col-md-2", @style = "height: 35px", @onchange = "TaxDetails(this.value)" })

                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-12"> 
                            <label class="col-md-3">Tax %:</label>
                            @Html.TextBoxFor(m => m.Taxpercent, new { @class = "form-control col-md-2" })
                        </div>

                        <div class="form-group col-md-12"> 
                            <label class="col-md-3">Effective Price:</label>
                            @Html.TextBoxFor(m => m.EffectivePrice, new { @class = "form-control col-md-2" })
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-md-3">Final Price:</label> 
                            @Html.TextBoxFor(m => m.FinalPrice, new { @class = "form-control col-md-2" })
                            @Html.ValidationMessageFor(model => model.FinalPrice, "", new { @class = "text-danger" })
                        </div>
                       
            


            </form>    </div>


      
        <input type="submit" name="submit" value="Save" class="btn btn-primary btn-md" />
        <input type="submit" name="submit" value="Duplicate" class="btn btn-primary btn-md" />
        @*               <button type="button" class="btn btn-primary" onclick="SaveDuplicate();">Duplicate</button>*@
        <button type="button" class="btn btn-secondary close1" data-dismiss="modal">Close</button>
  
  
}
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

<script src="//ajax.aspnetcdn.com/ajax/jquery.validate/1.11.1/jquery.validate.min.js"></script>
<script src="//ajax.aspnetcdn.com/ajax/mvc/4.0/jquery.validate.unobtrusive.min.js"></script>
@* for datepicker*@
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

@*validations*@

@*@Scripts.Render("~/bundles/jquery")

@Scripts.Render("~/bundles/jqueryval")*@

<script type="text/javascript">

    $(function () {
        $("#ExpiryDate").datepicker({
            changeMonth: true,
            changeYear: true,
            "setDate": new Date()
        });
    });

    $('.close1').click(function () {
        location.reload();

    });
    function TaxDetails(TaxId1, taxinclusive) {
        var TaxId = $('#TaxName option:selected').val();
        var Price = $('#Price').val();
        if (Price == "") {
            Price = null;
        }
        var FaceValue = Number($('#FaceValue').val());
        taxinclusive = $('#TaxInclusive').is(":checked");
        var model = {
            Id: TaxId,
            Price: Price,
            FaceValue: FaceValue,
            TaxInclusive: taxinclusive
        };
        if (TaxId == "") {
            $('#EffectivePrice').val(Price);
            $('#FinalPrice').val(Price);
        }
            //JSON.stringify({ TaxId: TaxId, Price: Price, TaxInclusive: taxinclusive, FaceValue: FaceValue }),
        else {

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("TaxDetails", "Product")',
                data: JSON.stringify({ model: model }),
                dataType: "json",
                success: function (data) {
                    $('#EffectivePrice').val(data.EffectivePrice);
                    $('#Taxpercent').val(data.Taxpercent);
                    $('#FinalPrice').val(data.FinalPrice);
                },
                error: function (e) {
                    alert(e);
                }
            });
        }
    }


</script>
<style>
    input.form-control{display:inline-block}
    select.form-control{display:inline-block}
.form-group label {
  font-size: 10px;
}
    .row {
            padding: 11px;
    margin: 7px;
    }
.form-group {
    margin-bottom: 0rem;
}
input[type=text] {
   max-height: 22px !important;
}

    .checkboxs {
        position: absolute;
        width: 20px;
    }

    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000 !important;
        /*background-color: #ffeeee !important;*/
    }

    .validation-summary-errors {
        font-weight: bold !important;
        color: #ff0000 !important;
    }

    .validation-summary-valid {
        display: none;
    }
</style>
