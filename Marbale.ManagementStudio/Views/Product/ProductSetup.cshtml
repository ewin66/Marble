@{
    ViewBag.Title = "Product Setup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/css/product.css" rel="stylesheet" />

<div>
    <!-- Button trigger modal -->


    <!-- Modal -->
    <div class="modal fade" id="basicExampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" data-backdrop="false"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="width: 900px; height: 612px;" id="newproductmodel">
                <div class="modal-header" style="background-color: crimson">
                    <h5 class="modal-title" id="exampleModalLabel">New Product</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" >
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="modelbody" style="position: absolute;left: 20px;top: 50px;">
                </div>
            </div>
        </div>
    </div>
</div>
<div class="first" style="overflow-y:scroll;height:420px;width:1300px;background-color: burlywood;">
    <div class="second" style="margin-left:20.2em; ">
        <table id="marbleTable" class="table">
            <thead>
                <th class="headerCol">ID</th>
                <th class="headerCol" style="left:55px">Edit</th>
                <th class="headerCol" style="left:100px">Name</th>
                <th>Type</th>
                <th>Category</th>
                <th>POSCounter</th>
                <th>Active</th>
                <th>DisplayInPOS</th>
                <th>DisplayGroup</th>
                <th>AutoGenerateCardNumber</th>
                <th>OnlyVIP</th>
                <th>Price</th>
                <th>FaceValue</th>
                <th>TaxInclusive</th>
                <th>FinalPrice</th>
                <th>EffectivePrice</th>
                <th>LastUpdatedBy</th>
                <th>LastUpdatedDate</th>
            </thead>
            @foreach (var item in ViewBag.productDetails)
            {  
                <tr onchange="UpdatedList(this)" onclick="getIdOfProduct(@item.Id)">
                    <td class="headerCol">@item.Id  </td>
                    <td class="headerCol" style="left:55px">
                        <button onClick="EditProduct(@item.Id)">-</button>
                    </td>
                    <td class="headerCol" style="left:100px">
                        <input type="text" value="@item.Name" class="gridText" />
                    </td>
                    <td>
                        <select name="TypeList" id="TypeList" class="gridText">
                            @foreach (var dow in (List<Marbale.BusinessObject.IdValue>)Session["TypeList"])
                            {
                                if (@item.Type == (@dow.Id).ToString())
                                {
                                <option value="@dow.Value" id="@dow.Id" selected>@dow.Value</option>
                                }
                                else
                                {
                                <option value="@dow.Value" id="@dow.Id">@dow.Value</option>
                                }
                            }
                        </select>
                    </td>
                    <td>
                        <select name="categoryList" id="categoryList" class="gridText">
                 @foreach (var dow in (List<Marbale.BusinessObject.IdValue>)Session["CategoryList"])
                            {
                                if (@item.Category == (@dow.Id).ToString())
                                {
                                <option value="@dow.Value" id="@dow.Id"  selected>@dow.Value</option>
                                }
                                else
                                {
                                <option value="@dow.Value" id="@dow.Id" >@dow.Value</option>
                                }
                            }
                        </select>
                    </td>
                    <td>
                        <input type="text" value="@item.POSCounter" class="gridText" />
                    </td>
                    <td>
                        <input type="checkbox"  @(item.Active ? "checked='checked'" : "") value="@item.Active" />
                    </td>
                    <td>
                        <input type="checkbox"  @(item.DisplayInPOS ? "checked='checked'" : "") value="@item.DisplayInPOS" />
                    </td>
                    <td>
                        <input type="text" value="@item.DisplayGroup" class="gridText" />
                    </td>
                    <td>
                        <input type="checkbox"  @(item.AutoGenerateCardNumber ? "checked='checked'" : "") value="@item.AutoGenerateCardNumber"/>
                    </td>
                    <td>
                        <input type="checkbox" @(item.OnlyVIP ? "checked='checked'" : "") value="@item.OnlyVIP" />
                    </td>
                    <td>
                        <input type="text" value="@item.Price" class="gridText"/>
                    </td>
                    <td>
                        <input type="text" value="@item.FaceValue" class="gridText"/>
                    </td>
                    <td>
                        <input type="checkbox" @(item.TaxInclusive ? "checked='checked'" : "") value="@item.TaxInclusive" />
                    </td>
                    <td>
                        <input type="text" value="@item.FinalPrice" class="gridText"/>
                    </td>
                    <td>
                        <input type="text" value="@item.EffectivePrice" class="gridText"/>
                    </td>
                    <td>
                        <input type="text" value="@item.LastUpdatedBy" class="gridText" disabled/>
                    </td>
                    <td>
                        <input type="text" value="@item.LastUpdatedDate" class="gridText" disabled/>
                    </td>
                </tr>  
            }
        </table>
    </div>
</div>
<div class="action">
    <button class="btn btn-primary btn-md" role="button" onclick="SaveProducts()" disabled id="saveproduct">Save</button>
    <a href="#" class="btn btn-primary btn-md" role="button" onclick="AddProduct()">Add Product</a>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#basicExampleModal" onclick="targetmodel()">
        New
    </button>
    <a href="/Marble/" class="btn btn-primary">Close</a>
      <button class="btn btn-primary btn-md" role="button" onclick="DeleteProducts()"  id="deleteproduct">Delete</button>
    <button class="btn btn-primary btn-md" role="button" onclick="history.back();"  id="back">Back</button>
</div>
<style>
    .highlight { background-color: #d2a973; }
</style>
<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script>
    var newRow = 0;
    var IdforDelete = 0;
    $(document).ready(function () {
       
        $('.dropdown-toggle').collapse({
            toggle: false
        });
    });
    $('.close').click(function () {
        location.reload();

    });
    $("#marbleTable tr").click(function () {
        debugger
        var selected = $($(this)[0].children).hasClass("highlight");
        $("#marbleTable tr").removeClass("highlight");
        $($(this)[0].children).removeClass("highlight");
        if (!selected) {
            //$(this).addClass("highlight");
            $($(this)[0].children).addClass("highlight");
        }
    });
    function DeleteProducts() {
      debugger
      var  Id = IdforDelete;
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("DeleteProducts", "Product")',
            data: { Id: Id },
            dataType: "json",
            success: function (data) {
               
                location.reload();
            },
            error: function (e) {
                alert(e);
            }
        });
    }
    function getIdOfProduct(Id) {
        IdforDelete = Id;
     
    }
    $(':input').on('change', function () {
        debugger
        $("#saveproduct").attr("disabled", false);
    });

    $("#newproductmodel").draggable({
        handle: ".modal-header"
    });
    function targetmodel() {
        $('#modelbody').load('/Product/Edit');
        $('.modal-title').text('New Product');
    }
    function AddProduct() {
        $("#saveproduct").attr("disabled", false);
      
        if (newRow.length >= 1) {
            return false;
        }
        var typeListOptions = '';
              @foreach (var dow in (List<Marbale.BusinessObject.IdValue>)Session["CategoryList"])
              {
                 @: typeListOptions = typeListOptions + '<option id="@dow.Id" value="" >@dow.Value</option>';
              }
        typeListOptions = typeListOptions + '</select></td>';
        var categoryListOptions = '';
              @foreach (var dow in (List<Marbale.BusinessObject.IdValue>)Session["CategoryList"])
              {
                   @: categoryListOptions = categoryListOptions + '<option id="@dow.Id" value="" >@dow.Value</option>';
              }
        categoryListOptions = categoryListOptions + ' </select> </td>';

         newRow = '<tr onchange=UpdatedList(this)> <td class="headerCol"> <a href="#"></a> </td>  <td class="headerCol" style="left:55px">  </td>' +
        '<td class="headerCol" style="left:100px"> <input type="text" value="" class="gridText"/>  </td>' +
        '<td> <select name="TypeList" id="TypeList">' + typeListOptions +
        '<td> <select name="categoryList" id="categoryList">' + categoryListOptions +
        '<td> <input type="text" value="" class="gridText" />  </td>' +
        '<td> <input type="checkbox" />  </td>' +
        '<td> <input type="checkbox" />  </td>' +
        '<td> <input type="text" value="" class="gridText" />  </td>' +
        '<td> <input type="checkbox" />  </td>' +
        '<td> <input type="checkbox" />  </td>' +
        '<td> <input type="text" value="" class="gridText"/>  </td>' +
        '<td> <input type="text" value="" class="gridText"/>  </td>' +
        '<td> <input type="checkbox" />  </td>' +
        '<td> <input type="text" value="" class="gridText"/>  </td>' +
        '<td> <input type="text" value="" class="gridText"/>  </td>' +
        '<td> <input type="text" value="" class="gridText" disabled/>  </td>' +
        '<td> <input type="text" value="" class="gridText" disabled/>  </td>' + '</tr>';
        $('#marbleTable tr:last').after(newRow);
    }
    function SaveProducts() {

        debugger
        var products = [];
        var table = document.getElementById('marbleTable');
          
        for (var r = 1, n = table.rows.length; r < n; r++) {
            if (updatedArray.includes(r)) {
                products.push({
                    Id: table.rows[r].cells[0].innerHTML,
                    Name: table.rows[r].cells[2].children[0].value,
                    //selectedType: table.rows[r].cells[3].children[0].options["selectedIndex"],
                    Type: table.rows[r].cells[3].children[0].options[table.rows[r].cells[3].children[0].options["selectedIndex"]].id,
                 //   selectedType: table.rows[r].cells[4].children[0].options["selectedIndex"],
                    Category: table.rows[r].cells[4].children[0].options[table.rows[r].cells[4].children[0].options["selectedIndex"]].id,
                    //Category: table.rows[r].cells[4].children[0].id,
                    POSCounter: table.rows[r].cells[5].children[0].value,
                    Active: table.rows[r].cells[6].children[0].checked,
                    DisplayInPOS: table.rows[r].cells[7].children[0].checked,
                    DisplayGroup: table.rows[r].cells[8].children[0].value,
                    AutoGenerateCardNumber: table.rows[r].cells[9].children[0].checked,
                    OnlyVIP: table.rows[r].cells[10].children[0].checked,
                    TaxInclusive: table.rows[r].cells[11].children[0].checked,
                    Price: table.rows[r].cells[12].children[0].value,
                    FaceValue: table.rows[r].cells[13].children[0].value,
                    FinalPrice: table.rows[r].cells[14].children[0].value,
                    EffectivePrice: table.rows[r].cells[15].children[0].value,
                    ExpiryDate: '10/10/2020',
                    StartDate: '10/10/2020',
                    LastUpdatedDate: '10/10/2019',
                });
            }
        }

        var ProductName = products[0].Name;
        var PriceName = products[0].Price;
        if (ProductName.trim() == '') {
            alert('Please Enter Product Name');
            return false;
        }
        if (PriceName == '') {
            alert('Please Enter Price');
        }

        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("UpdateProducts", "Product")',
            data: JSON.stringify({ products: products }),
            dataType: "json",
            success: function (data) {
                alert('Data Saved');
                location.reload();
            },
            error: function (e) {
                alert(e);
            }
        });
    }
    var updatedArray = [];
    function UpdatedList(x) {
        debugger;
        if (!updatedArray.includes(x.rowIndex)) {
            updatedArray.push(x.rowIndex);
        }
    }
    function EditProduct(id) {
        $('.modal-title').text('Edit Product');
        $('#basicExampleModal').modal('show');
        $('#modelbody').load('/Product/Edit', { "id": id });
        //window.open("/product/Edit/"+id, "Marbale", "width=700,height=700");
    }
</script>
